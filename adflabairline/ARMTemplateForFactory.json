{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adflabairline"
		},
		"AmazonS3Source_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS3Source'"
		},
		"MasterAirlineSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MasterAirlineSource'"
		},
		"azstorage_staging_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azstorage_staging'"
		},
		"MasterAirline_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "MASTER.txt"
		},
		"MasterAirline_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "s3-source"
		},
		"WeatherSink_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "weatherinfo.txt"
		},
		"WeatherSink_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "inputer"
		},
		"master_faa_file_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "FAAMaster.txt"
		},
		"master_faa_file_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "input"
		},
		"AirelineMaster_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "AZUREAD\\sarath"
		},
		"AmazonS3Source_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAJHJOC6ITSHA22RGQ"
		},
		"adflabdemo_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://adflabkey.vault.azure.net/"
		},
		"weatherservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/S3 to Azure Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S3 to Azure Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "MasterAirline",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "master_faa_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Success Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.australiaeast.logic.azure.com:443/workflows/468f43a6c3cb4681b8bcaa3167ee223b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=737m0uAvZDdIjrlmY51EHkCuKEwAwbXQ7NhEHm3J4K0",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"message": "@{activity('S3 to Azure Blob').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Send Failure Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "Failure URL: https://prod-05.australiaeast.logic.azure.com:443/workflows/a925863dd7ec40d59eef0dc87e80d1c3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=v48bQGk-FXRnhVUGv30zFBSlXnqpshTMyljGYntNhxM",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"message": "@{activity('S3 to Azure Blob').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Exec Weather to Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success Email",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weather To Blob Copy",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "boppudsara@gmail.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MasterAirline')]",
				"[concat(variables('factoryId'), '/datasets/master_faa_file')]",
				"[concat(variables('factoryId'), '/pipelines/Weather To Blob Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weather To Blob Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Weather to Blob Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "restweather",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WeatherSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Success Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Weather to Blob Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.australiaeast.logic.azure.com:443/workflows/468f43a6c3cb4681b8bcaa3167ee223b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=737m0uAvZDdIjrlmY51EHkCuKEwAwbXQ7NhEHm3J4K0",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"message": "@{activity('Weather To Blob Copy').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Send Failure Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Weather to Blob Copy",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "ilure URL: https://prod-05.australiaeast.logic.azure.com:443/workflows/a925863dd7ec40d59eef0dc87e80d1c3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=v48bQGk-FXRnhVUGv30zFBSlXnqpshTMyljGYntNhxM",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"message": "@{activity('Weather To Blob Copy').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "boppudsara@gmail.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/restweather')]",
				"[concat(variables('factoryId'), '/datasets/WeatherSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterAirline')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MasterAirlineSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "N-Number",
						"type": "String"
					},
					{
						"name": "Serial Number",
						"type": "String"
					},
					{
						"name": "MFR MDL Code",
						"type": "String"
					},
					{
						"name": "Eng MFR Code",
						"type": "String"
					},
					{
						"name": "Year MFR",
						"type": "String"
					},
					{
						"name": "Type Registrant",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Street 1",
						"type": "String"
					},
					{
						"name": "Street2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZIP",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "County ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Last Activity Date",
						"type": "String"
					},
					{
						"name": "Cert Issue Date",
						"type": "String"
					},
					{
						"name": "Certification Requested ",
						"type": "String"
					},
					{
						"name": "Type Aircraft",
						"type": "String"
					},
					{
						"name": "Type Engine",
						"type": "String"
					},
					{
						"name": "Status Code",
						"type": "String"
					},
					{
						"name": "Mode S Code",
						"type": "String"
					},
					{
						"name": "Fractional  Ownership",
						"type": "String"
					},
					{
						"name": "Airworthiness Date",
						"type": "String"
					},
					{
						"name": "Other Name 1",
						"type": "String"
					},
					{
						"name": "Other Name 2",
						"type": "String"
					},
					{
						"name": "Other Name 3",
						"type": "String"
					},
					{
						"name": "Other Name 4",
						"type": "String"
					},
					{
						"name": "Other Name 5",
						"type": "String"
					},
					{
						"name": "Expiration Date",
						"type": "String"
					},
					{
						"name": "Unique ID",
						"type": "String"
					},
					{
						"name": "Kit MFR Code",
						"type": "String"
					},
					{
						"name": "Kit Model",
						"type": "String"
					},
					{
						"name": "Mose S Code Hex",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('MasterAirline_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('MasterAirline_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MasterAirlineSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azstorage_staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('WeatherSink_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('WeatherSink_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azstorage_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_faa_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azstorage_staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('master_faa_file_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('master_faa_file_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azstorage_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/restweather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "weatherservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/rest/random-weather-dec-2016",
					"requestMethod": "GET",
					"additionalHeaders": {
						"x-apikey": "5a31643dcb25c1076c7cd9ab",
						"Content-Type": "application/json"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/weatherservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirelineMaster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "BiTQ20181029",
					"userId": "[parameters('AirelineMaster_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "adflabdemo",
							"type": "LinkedServiceReference"
						},
						"secretName": "adflabs3storage",
						"secretVersion": ""
					}
				},
				"connectVia": {
					"referenceName": "self-hosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/self-hosted')]",
				"[concat(variables('factoryId'), '/linkedServices/adflabdemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS3Source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('AmazonS3Source_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS3Source_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterAirlineSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('MasterAirlineSource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adflabdemo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('adflabdemo_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azstorage_staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('azstorage_staging_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/weatherservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('weatherservice_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Default')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/self-hosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}